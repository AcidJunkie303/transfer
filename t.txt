




using System;
using System.IO;
using IWshRuntimeLibrary;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.ComTypes;

[ComImport, Guid("000214F9-0000-0000-C000-000000000046"), InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
public interface IShellLinkW
{
    // Method declarations
}


// Define these as needed for COM interop
[ComImport]
[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
[Guid("886D8EEB-8CF2-4446-8D02-CDBA1DBDCF99")]
interface IPropertyStore
{
    uint GetCount([Out] out uint propertyCount);
    uint GetAt([In] uint propertyIndex, out PROPERTYKEY key);
    uint GetValue([In] ref PROPERTYKEY key, [Out] PropVariant pv);
    uint SetValue([In] ref PROPERTYKEY key, [In] PropVariant pv);
    uint Commit();
}

[StructLayout(LayoutKind.Sequential, Pack = 4)]
public struct PROPERTYKEY
{
    public Guid fmtid;
    public uint pid;
}

// Helper for VARIANT
[StructLayout(LayoutKind.Explicit)]
public sealed class PropVariant : IDisposable
{
    [FieldOffset(0)] private ushort vt;
    [FieldOffset(8)] IntPtr pointerValue;

    public PropVariant(string value)
    {
        vt = 31; // VT_LPWSTR
        pointerValue = Marshal.StringToCoTaskMemUni(value);
    }
    public void Dispose() { if (pointerValue != IntPtr.Zero) Marshal.FreeCoTaskMem(pointerValue); }
}

// Needed for IShellLink
[ComImport]
[Guid("00021401-0000-0000-C000-000000000046")]
class CShellLink { }

public static void CreateShortcutWithAppUserModelID(string exePath, string shortcutName, string appUserModelID)
{
    string shortcutPath = Path.Combine(
        Environment.GetFolderPath(Environment.SpecialFolder.StartMenu),
        "Programs",
        shortcutName + ".lnk"
    );
    // 1. Create the shortcut via WSH
    var shell = new WshShell();
    IWshShortcut shortcut = (IWshShortcut)shell.CreateShortcut(shortcutPath);
    shortcut.TargetPath = exePath;
    shortcut.WorkingDirectory = Path.GetDirectoryName(exePath);
    shortcut.Save();

    // 2. Set the AppUserModelID property on the shortcut
    var shellLink = (IShellLinkW)new CShellLink();
    ((IPersistFile)shellLink).Load(shortcutPath, 0);

    // Set AppUserModelID property
    PROPERTYKEY PKEY_AppUserModel_ID = new PROPERTYKEY
    {
        fmtid = new Guid("9F4C2855-9F79-4B39-A8D0-E1D42DE1D5F3"),
        pid = 5
    };
    IPropertyStore propStore = (IPropertyStore)shellLink;
    using (var pv = new PropVariant(appUserModelID))
    {
        propStore.SetValue(ref PKEY_AppUserModel_ID, pv);
        propStore.Commit();
    }
    ((IPersistFile)shellLink).Save(shortcutPath, true);
}

// Usage in your app (run ONCE, e.g. at install or first run):
// CreateShortcutWithAppUserModelID(Application.ExecutablePath, "YourAppName", "YourCompany.YourAppID");
